name: Deploy QR-BOT_ALMAZ

on:
  push:
    branches: [ main ]

# ‚ñ∏ –æ–¥–∏–Ω –¥–µ–ø–ª–æ–π –∑–∞ —Ä–∞–∑
concurrency:
  group: deploy-qrbot-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 1. –ö–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    - name: Checkout source
      # üëá —Ñ–∏–∫—Å–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –º–∏–Ω–æ—Ä-–≤–µ—Ä—Å–∏—é
      uses: actions/checkout@v4.1.2

    # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 2. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –ø–æ SSH –∏ –¥–µ–ø–ª–æ–∏–º ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
    - name: Deploy on VPS
      # üëá —Ç–æ–∂–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SERVER_PORT || '22' }}
        # —á—Ç–æ–±—ã —Å–º–µ–Ω–∞ host-key –Ω–µ —Ä–æ–Ω—è–ª–∞ –±–∏–ª–¥
        host_fingerprint: ${{ secrets.SERVER_FINGERPRINT }}

        # ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ shell-—Å–∫—Ä–∏–ø—Ç, –≤—ã–ø–æ–ª–Ω—è–µ–º—ã–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
        script: |
          set -Eeuo pipefail

          PROJECT_DIR="$HOME/qr-bot-almaz"
          REPO_URL="https://github.com/${{ github.repository }}"

          echo "== –ü—Ä–æ–≤–µ—Ä—è–µ–º / –∫–ª–æ–Ω–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç =="
          if [[ ! -d "$PROJECT_DIR/.git" ]]; then
            git clone "$REPO_URL" "$PROJECT_DIR"
          fi

          cd "$PROJECT_DIR"

          echo "== –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ (–±–µ–∑ —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤–æ–∫) =="
          git fetch origin main --tags

          # –ï—Å—Ç—å –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ tracked-—Ñ–∞–π–ª–∞—Ö?
          if ! git diff-index --quiet HEAD; then
            echo "::error::–í —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –µ—Å—Ç—å –Ω–µ–ø—É—à–µ–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è! –î–µ–ø–ª–æ–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
            git status -s
            exit 1
          fi

          # Fast-forward merge, –±–µ–∑ reset --hard
          git merge --ff-only origin/main

          echo "== –ü—Ä–æ–≤–µ—Ä—è–µ–º .env =="
          if [[ ! -f .env ]]; then
            echo "::error::.env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤—Ä—É—á–Ω—É—é –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º."
            exit 1
          fi

          echo "== –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–µ–∫ =="
          docker compose down || true

          echo "== –°–æ–±–∏—Ä–∞–µ–º / —Ç—è–Ω–µ–º –æ–±—Ä–∞–∑—ã =="

          # ‚ñ∏ –í–∞—Ä–∏–∞–Ω—Ç –ê. –°—Ç—Ä–æ–∏–º –æ–±—Ä–∞–∑ –ø—Ä—è–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–æ—Å—Ç–∞–≤–∏—Ç—å –µ—Å–ª–∏ —Ç–∞–∫ —É–¥–æ–±–Ω–µ–µ)
          docker compose build --pull

          # ‚ñ∏ –í–∞—Ä–∏–∞–Ω—Ç –ë. –ï—Å–ª–∏ –æ–±—Ä–∞–∑—ã —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ GHCR / Docker Hub
          # docker compose pull || true

          echo "== –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã =="
          docker compose up -d --remove-orphans

          echo "== Post-–¥–µ–ø–ª–æ–π health-check =="
          # –∂–¥—ë–º –º–∞–∫—Å–∏–º—É–º 30 —Å–µ–∫, –ø–æ–∫–∞ —Å–µ—Ä–≤–∏—Å –æ—Ç–¥–∞—Å—Ç 200/OK
          for i in {1..30}; do
            if curl -sf http://localhost:5005/ >/dev/null; then
              echo "Service healthy üëå"
              ok=1
              break
            fi
            sleep 1
          done
          [[ "${ok:-0}" == "1" ]] || {
            echo "::error::–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ health-check"
            docker compose ps
            docker compose logs --tail=100
            exit 1
          }

          echo "== –ß–∏—Å—Ç–∏–º —Å—Ç–∞—Ä—ã–µ dangling-–æ–±—Ä–∞–∑—ã (–Ω–µ –º–æ–ª–æ–∂–µ 24 —á) =="
          docker image prune -af --filter "until=24h" || true