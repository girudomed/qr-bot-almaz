name: Deploy QR-BOT_ALMAZ

on:
  push:
    branches: [ main ]          # деплоим всё, что уходит в main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Берём код репозитория
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. Поднимаем SSH-туннель и деплоим
    - name: SSH into server and deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_KEY }}
        # ╭─────────────────────────────────────── SSH-скрипт ───────────────────────────────────────╮
        script: |
          set -e

          echo "=== Проверяем наличие проекта на сервере ==="
          if [ ! -d ~/qr-bot-almaz ]; then
            echo "Проект не найден — клонируем..."
            git clone https://github.com/${{ github.repository }} ~/qr-bot-almaz
          fi

          cd ~/qr-bot-almaz

          echo "=== Обновляем код до latest main ==="
          git fetch origin
          git reset --hard origin/main

          # НЕ перезаписываем .env, если он уже есть
          cp -n .env.example .env || true

          echo "=== Останавливаем предыдущие контейнеры ==="
          docker compose down || true            # новая CLI 'docker compose', не 'docker-compose'

          echo "=== Собираем и запускаем свежий образ ==="
          docker compose build --pull            # тянем обновления базовых образов
          docker compose up -d --remove-orphans

          echo "=== Чистим старые dangling-образы и остановленные контейнеры ==="
          docker image prune -af || true
          docker container prune -f || true

          echo "=== 🚀 Деплой QR-BOT_ALMAZ завершён успешно ==="
        # ╰───────────────────────────────────────────────────────────────────────────────────────────╯