# syntax=docker/dockerfile:1
###############################################################################
# 1) Базовый слой ─ минимальный Debian-Slim + Python 3.11                    #
###############################################################################
FROM python:3.11-slim AS base

# Не заставляем apt задавать вопросы
ENV DEBIAN_FRONTEND=noninteractive \
    # предотвратим создание .pyc-файлов и буферизацию stdout
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

###############################################################################
# 2) Системные зависимости:                                                  #
#    • libzbar0  – нужен pyzbar для распознавания QR                         #
#    • curl      – для healthcheck                                           #
###############################################################################
RUN apt-get update -qq \
 && apt-get install -y --no-install-recommends libzbar0 curl \
 && apt-get purge --auto-remove -y gcc g++ build-essential || true \
 && rm -rf /var/lib/apt/lists/*

###############################################################################
# 3) Подготовка директории приложения                                        #
###############################################################################
WORKDIR /app

# requirements отдельно ─ кэш слоёв будет срабатывать,
# если исходники меняются чаще, чем зависимости
COPY requirements.txt /app/requirements.txt

###############################################################################
# 4) Установка python-зависимостей                                           #
###############################################################################
RUN pip install --no-cache-dir --upgrade pip \
 && pip install --no-cache-dir -r /app/requirements.txt gunicorn

###############################################################################
# 5) Копируем исходники                                                     #
###############################################################################
COPY . /app

###############################################################################
# 6) Непривилегированный пользователь                                        #
###############################################################################
RUN useradd -m -U qrbot
USER qrbot

###############################################################################
# 7) Port + Health-check                                                     #
###############################################################################
EXPOSE 8080
HEALTHCHECK --interval=30s --timeout=3s --retries=3 \
  CMD curl -fs http://localhost:8080/health || exit 1

###############################################################################
# 8) Дефолтный entrypoint (для web-сервера).                                 #
#    Для других служб переопределяем в docker-compose.yml                    #
###############################################################################
CMD ["gunicorn", "-w", "2", "-k", "gthread", "-t", "30", \
     "-b", "0.0.0.0:8080", "web.main:app"]